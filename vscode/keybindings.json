// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "cmd+k c",
    "command": "git.commit"
  },
  {
    "key": "cmd+i",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+i",
    "command": "-markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+i",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+i",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "shift+cmd+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "shift+cmd+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+cmd+i",
    "command": "editor.action.previewDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.previewDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+=",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward"
  },
  {
    "key": "cmd+k j",
    "command": "workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "cmd+k down",
    "command": "-workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "cmd+k h",
    "command": "workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "cmd+k left",
    "command": "-workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "cmd+k l",
    "command": "workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "cmd+k right",
    "command": "-workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "cmd+k k",
    "command": "workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "cmd+k up",
    "command": "-workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "alt+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+space",
    "command": "toggleSuggestionDetails",
    "when": "editorTextFocus && suggestWidgetVisible"
  },
  {
    "key": "alt-shift-space",
    "command": "editor.action.triggerParameterHints",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "suggestWidgetVisible && vim.active && vim.use<C-p>"
  },
  {
    "key": "ctrl+p",
    "command": "-cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-extension.vim_ctrl+n",
    "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl"
  },
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "-workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+cmd+h",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "cmd+m",
    "command": "workbench.action.minimizeOtherEditors",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+shift+m",
    "command": "workbench.action.maximizeEditor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+m",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+cmd+m",
    "command": "workbench.action.evenEditorWidths",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+j",
    "command": "bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+l",
    "command": "-bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+k",
    "command": "bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+j",
    "command": "-bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+i",
    "command": "editor.action.peekTypeDefinition"
  },
  {
    "key": "ctrl+alt+2",
    "command": "outline.focus"
  },
  {
    "key": "alt+cmd+0",
    "command": "-workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "cmd+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+alt+n",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult"
  },
  {
    "key": "f4",
    "command": "-search.action.focusNextSearchResult",
    "when": "hasSearchResult"
  },
  {
    "key": "ctrl+alt+p",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult"
  },
  {
    "key": "shift+f4",
    "command": "-search.action.focusPreviousSearchResult",
    "when": "hasSearchResult"
  },
  {
    "key": "ctrl+cmd+n",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "f3",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+cmd+p",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+f3",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+n",
    "command": "-gitProjectManager.openProjectNewWindow"
  },
  {
    "key": "alt+cmd+p",
    "command": "-gitProjectManager.openProject"
  },
  {
    "key": "shift+alt+l",
    "command": "-bookmarks.expandSelectionToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+j",
    "command": "-bookmarks.expandSelectionToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+k",
    "command": "-bookmarks.shrinkSelection",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+j",
    "command": "-latex-workshop.synctex",
    "when": "editorTextFocus && isMac"
  },
  {
    "key": "alt+cmd+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+h",
    "command": "bookmarks.toggle"
  },
  {
    "key": "shift+ctrl+alt+l",
    "command": "bookmarks.listFromAllFiles"
  },
  {
    "key": "ctrl+alt+l",
    "command": "bookmarks.list"
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "shift+f8",
    "command": "-editor.action.marker.prevInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "f8",
    "command": "editor.action.marker.next"
  },
  {
    "key": "shift+f8",
    "command": "editor.action.marker.prev"
  },
  {
    "key": "ctrl+alt+]",
    "command": "workbench.action.nextEditor",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+[",
    "command": "workbench.action.previousEditor",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+]",
    "command": "workbench.action.nextSideBarView",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+alt+[",
    "command": "workbench.action.previousSideBarView",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+alt+]",
    "command": "workbench.action.nextPanelView",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+alt+[",
    "command": "workbench.action.previousPanelView",
    "when": "panelFocus"
  },
  {
    "key": "alt+cmd+[",
    "command": "-editor.fold",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+alt+0",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "alt+cmd+b",
    "command": "-latex-workshop.build",
    "when": "editorTextFocus && isMac"
  },
  {
    "key": "alt+cmd+b",
    "command": "-latex-workshop.build",
    "when": "editorTextFocus && !latex-workshop:altkeymap"
  },
  {
    "key": "ctrl+alt+b",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+ctrl+alt+b",
    "command": "editor.debug.action.toggleInlineBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+f9",
    "command": "-editor.debug.action.toggleInlineBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+-",
    "command": "workbench.action.focusPanel"
  },
  {
    "key": "ctrl+alt+1",
    "command": "workbench.files.action.focusFilesExplorer"
  },
  {
    "key": "ctrl+alt+r",
    "command": "workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "alt+cmd+r",
    "command": "-workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "ctrl+alt+r",
    "command": "workbench.action.terminal.toggleFindRegexTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+r",
    "command": "-workbench.action.terminal.toggleFindRegexTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+alt+c",
    "command": "workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "alt+cmd+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "ctrl+alt+c",
    "command": "workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+alt+w",
    "command": "workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "alt+cmd+w",
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "ctrl+alt+w",
    "command": "workbench.action.terminal.toggleFindWholeWordTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "alt+cmd+w",
    "command": "-workbench.action.terminal.toggleFindWholeWordTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+alt+r",
    "command": "toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+r",
    "command": "-toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+w",
    "command": "toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+w",
    "command": "-toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+c",
    "command": "toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+c",
    "command": "search.action.copyPath",
    "when": "fileMatchOrFolderMatchFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-search.action.copyPath",
    "when": "fileMatchOrFolderMatchFocus"
  },
  {
    "key": "ctrl+alt+r",
    "command": "toggleSearchRegex",
    "when": "searchViewletFocus && searchViewletVisible"
  },
  {
    "key": "alt+cmd+r",
    "command": "-toggleSearchRegex",
    "when": "searchViewletFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+alt+c",
    "command": "toggleSearchCaseSensitive",
    "when": "searchViewletFocus && searchViewletVisible && !fileMatchOrFolderMatchFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-toggleSearchCaseSensitive",
    "when": "searchViewletFocus && searchViewletVisible && !fileMatchOrFolderMatchFocus"
  },
  {
    "key": "ctrl+alt+w",
    "command": "toggleSearchWholeWord",
    "when": "searchViewletFocus && searchViewletVisible"
  },
  {
    "key": "alt+cmd+w",
    "command": "-toggleSearchWholeWord",
    "when": "searchViewletFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+cmd+enter",
    "command": "-editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+alt+c",
    "command": "copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+shift+alt+c",
    "command": "copyRelativeFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "shift+alt+cmd+c",
    "command": "-copyRelativeFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+alt+g h",
    "command": "gitlens.showQuickFileHistory",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+cmd+g h",
    "command": "-gitlens.showQuickFileHistory",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+alt+g c",
    "command": "gitlens.showQuickCommitFileDetails",
    "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+cmd+g c",
    "command": "-gitlens.showQuickCommitFileDetails",
    "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+alt+g /",
    "command": "gitlens.showCommitSearch",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+cmd+g /",
    "command": "-gitlens.showCommitSearch",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+alt+tab",
    "command": "workbench.action.showAllEditors"
  },
  {
    "key": "alt+cmd+tab",
    "command": "-workbench.action.showAllEditors"
  },
  {
    "key": "ctrl+alt+g shift+h",
    "command": "gitlens.showQuickRepoHistory",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+cmd+g shift+h",
    "command": "-gitlens.showQuickRepoHistory",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+alt+g -",
    "command": "gitlens.showLastQuickPick",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+cmd+g -",
    "command": "-gitlens.showLastQuickPick",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "shift+alt+w",
    "command": "-gitlens.diffWithWorking",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+cmd+tab",
    "command": "workbench.action.switchWindow"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  }
]
